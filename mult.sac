use StdIO: all;
use Array: all;
use Rand: all;
use RTimer: all;
use Clock: {time, gettime, difftime};

inline float product(float[*]a, float[*] b)
{

	reps = 10;
	while (reps > 0) {
		b = {[i, j] -> sum(a[[i,.]] * b[[., j]])};
		reps = reps - 1;
	}
	return b[0,0];
}
float timeProduct(int n)
{
	float t;
	mint = tof(100000.0);
	maxt = tof(0.0);
	shape = [n, n];

	a = tof(random(shape, -1.0, 1.0));
	b = tof(random(shape, -1.0, 1.0));

	b = {[i, j] -> sum(a[[i,.]] * b[[., j]])};
	timer = createRTimer();
	startRTimer(timer);
	
	res = product(a, b);
	stopRTimer(timer);
	t = tof(getRTimerDbl(timer));
	t = tof(t*tof(1000.0));
	destroyRTimer(timer);
	printf("%.3f ", t);
	return res;
}
int main()
{
	startn = 100;
	increment = 10;
	count = 100;
	i = 0;
	j = 0;
	times = tof(genarray([count], 0.0));

	while(i < count) {
		times[i] = timeProduct(startn);
		i++;
		startn = startn + increment;
	}


	return 0;
}
